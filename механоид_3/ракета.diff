// Используем вспомогательный модуль для S-функции
import "support.scriptc0" type Support s;

// Движение центра масс
// y1 - x
// y2 - y
// y направлен вверх, x - вперед, z - вправо 
// y3 - z
// y4 - скорость vx, y5 - скорость vy, y6 - скорость vz
// Кинематика
y1' = y4;
y2' = y5;
y3' = y6;
// Динамика
// nxt, nzt, nyt - перегрузки по осям
// перегрузка - отношение силы, действующей на объект, (F) к силе тяжести (Fg)
// n = F / Fg
// В динамике движения ценртра масс перегрузка является управляющим воздействием
y4' = g*y4 / sqrt(y4^2+y5^2+y6^2) * (nxt - y5 / sqrt(y4^2+y6^2) * nyt)
    - g*y6 / sqrt(y4^2+y6^2) * nzt;
y5' = g*y5 / sqrt(y4^2+y5^2+y6^2) * nxt
    + g * sqrt(y4^2+y6^2) / sqrt(y4^2+y5^2+y6^2) * nyt
    - g;
y6' = g*y6 / sqrt(y4^2+y5^2+y6^2) * (nxt - y5 / sqrt(y4^2+y6^2) * nyt)
    + g*y4 / sqrt(y4^2+y6^2) * nzt;

// Система управления
// Vg - текущая путевая скорость.
// Путевая скорость - скорость в плоскости OXZ
// Vg = sqrt(y4^2+y6^2);
Vg = vec2Len(y4, y6);
y5_z = Kh * (y2_z - y2);
y5_z = s.limit(y5_z, y5_z_min, y5_z_max);
// V = sqrt(y4^2+y5^2+y6^2);
V = vec3Len(y4, y5, y6);
nxt = Kv * (V_z - Vg);
nxt = s.limit(nxt, nxt_min, nxt_max);
nyt = 1 + Kny*(y5_z - y5);
nyt = s.limit(nyt,nyt_min,nyt_max);
// Rg = sqrt((xc-y1)^2+(zc-y3)^2) + 0.0000001;
// Знаменатель сокращен, потому что
// atan2(y, x) = atan(y/x)
// SIPSI = (y4*(zc-y3)-y6*(xc-y1))/(Vg*Rg);
// COPSI = (y4*(xc-y1)+y6*(zc-y3))/(Vg*Rg);
SIPSI = (y4*(zc-y3)-y6*(xc-y1));
COPSI = (y4*(xc-y1)+y6*(zc-y3));
PSI = atan2(SIPSI,COPSI);
OM = Kom*PSI;
nzt = Knzt*OM;
nzt = s.limit(nzt,nzt_min,nzt_max);

// Управляющие воздействия через силы
// X = Kx*(y4^2 +y6^2);
//nxt = (P-X)/(m*g);
//nyt = Yv/(m*g);
//nzt = Yg/(m*g);

// P = nxt * m*g - X;
// Yv = nyt * m*g;
// Yg = nzt * m*g;
