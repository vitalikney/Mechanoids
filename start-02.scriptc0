import "механоид/враги.scriptc0" type Враги;
import "механоид/механоид.scriptc0" type Механоид;
import "механоид/пушка.scriptc0" type Пушка;
import "механоид/параметры_изм.scriptc0" type Параметры параметры;
import "механоид/параметры_неизм.scriptc0" type Константы константы;
import "механоид/элемент.scriptc0" type Элемент;
// import "механоид/методы_ракет.scriptc0" type Методы_ракет tmp;

for(int i=0; i < константы.количество_механоидов; ++i) {
    mechanoid.addStatus("М"+i, параметры.м[i].здоровье, параметры.м[i].пушка.количество_зарядов);
}

auto Режим = { Высадка : 0, Бой : 1};
int режим = Режим.Бой;

// Инициализация графиков
chart.init("Сцена");
// graph3d.init("Сцена");

mechanoid.init("_", константы.ширина_поля, константы.высота_поля);
mechanoid.clearLog();

mechanoid.addSettings("Ф" + параметры.количество_захваченных_флагов, mechanoid.Mesh.Triangle, константы.размер_флага, mechanoid.Color.Yellow);
mechanoid.addPoint("Ф" + параметры.количество_захваченных_флагов, 
                    параметры.флаг[параметры.количество_захваченных_флагов].x,
                    параметры.флаг[параметры.количество_захваченных_флагов].z );
параметры.флаг[параметры.количество_захваченных_флагов].отображается = true;

mechanoid.addSettings("М"+0, mechanoid.Mesh.Circle, константы.размер_механоида, mechanoid.Color.Blue);
mechanoid.enableLabelView("М"+0);
mechanoid.addSettings("М"+1, mechanoid.Mesh.Circle, константы.размер_механоида, mechanoid.Color.Orange);
mechanoid.enableLabelView("М"+1);
mechanoid.addSettings("М"+2, mechanoid.Mesh.Circle, константы.размер_механоида, mechanoid.Color.Purple);
mechanoid.enableLabelView("М"+2);
mechanoid.addSettings("М"+3, mechanoid.Mesh.Circle, константы.размер_механоида, mechanoid.Color.Red);
mechanoid.enableLabelView("М"+3);

for(int i=0; i < константы.количество_механоидов; ++i) {
    for(int j=0; j < 100; ++j) {
        mechanoid.addSettings("Ракета " + i + " " + j, mechanoid.Mesh.Square, константы.размер_ракеты, mechanoid.Color.Magenta);
    }
}
// math.vec2Len();

// Запсукает снаряд пушки из обоймы
void rocketLaunch(int i, float xj, float zj) {
    
    // sys.print("(X1, y1): " + м[i].д.y1 + ", " + м[i].д.y3 + " (x2, y2) : " + xj + ", " + zj);
    
    if ((math.toInt(zj - параметры.м[i].д.y3) != 0) || ((math.toInt(xj - параметры.м[i].д.y1) != 0))) {
        float xj_new; 
        float zj_new;
        // Уменьшение обоймы 
        параметры.м[i].пушка.количество_зарядов -= 1;
        mechanoid.updateStatus("М"+i, параметры.м[i].здоровье, параметры.м[i].пушка.количество_зарядов);
        int j = 0; 
        j = параметры.м[i].пушка.количество_зарядов;
        
        // Установка начальных координат ракеты
        параметры.м[i].пушка.обойма[j].ракета.y1 = параметры.м[i].д.y1;
        параметры.м[i].пушка.обойма[j].ракета.y2 = параметры.м[i].д.y2;
        параметры.м[i].пушка.обойма[j].ракета.y3 = параметры.м[i].д.y3;
        
        // При помощи урванения прямой
        if (xj >= параметры.м[i].д.y1) 
        {
            xj_new = xj + константы.высота_поля;
            zj_new = ((xj_new - параметры.м[i].д.y1) / (xj - параметры.м[i].д.y1) * (zj - параметры.м[i].д.y3) + параметры.м[i].д.y3);
        }
        else
        {
            xj_new = xj - константы.высота_поля;
            zj_new = ((xj_new - параметры.м[i].д.y1) / (xj - параметры.м[i].д.y1) * (zj - параметры.м[i].д.y3) + параметры.м[i].д.y3);
        }
        
         // Установка конечных координат ракеты
        параметры.м[i].пушка.обойма[j].ракета.xc = xj_new;
        параметры.м[i].пушка.обойма[j].ракета.zc = zj_new;
        параметры.м[i].пушка.обойма[j].ракета.V_z = константы.скорость_выстрела;
        scene.add(параметры.м[i].пушка.обойма[j].ракета);
    }
    /*
    else {
        // При помощи урванения прямой
        if (zj >= м[i].д.y3) 
        {
            zj_new = zj + параметры.ширина_поля;
            xj_new = ((zj_new - м[i].д.y3) / (zj - м[i].д.y3) * (xj - м[i].д.y1) + м[i].д.y1);
        }
        else
        {
            zj_new = zj - параметры.ширина_поля;
            xj_new = ((zj_new - м[i].д.y3) / (zj - м[i].д.y3) * (xj - м[i].д.y1) + м[i].д.y1);
        }
    }
    */
}

// Проверка, что ракета внутри поля
void rocketOnScene(int i, int j) {
    j = j;
    if (((параметры.м[i].пушка.обойма[j].ракета.y1 > - math.toFloat(константы.ширина_поля)) && (параметры.м[i].пушка.обойма[j].ракета.y1 < math.toFloat(константы.ширина_поля)) &&
       ((параметры.м[i].пушка.обойма[j].ракета.y3 > - math.toFloat(константы.высота_поля)) && (параметры.м[i].пушка.обойма[j].ракета.y3 < math.toFloat(константы.высота_поля)))))
       {}
    else {
        параметры.м[i].пушка.обойма[j].отображать = false;
        scene.remove(параметры.м[i].пушка.обойма[j].ракета);
        mechanoid.removePoint("Ракета " + i + " " + j);
    }
}

// Проверка попадания ракеты
void rocketHit(int cur) {
    for(int i = параметры.м[cur].пушка.макс_колво_зарядов - 1; i >= параметры.м[cur].пушка.количество_зарядов; --i) {
        if (параметры.м[cur].пушка.обойма[i].отображать == true) {
            for (int j = 0; j < константы.количество_механоидов; ++j) {
                if (j != cur) {
                    if (параметры.м[j].жив) {
                            // if (math.vec2Len(math.abs(м[j].д.y1-м[cur].пушка.обойма[i].ракета.y1), math.abs(м[j].д.y3-м[cur].пушка.обойма[i].ракета.y3)) <= math.abs(параметры.размер_механоида + параметры.размер_ракеты))
                        if (math.vec2Len(параметры.м[j].д.y1-параметры.м[cur].пушка.обойма[i].ракета.y1, параметры.м[j].д.y3-параметры.м[cur].пушка.обойма[i].ракета.y3)
                <= math.toFloat(константы.размер_механоида + константы.размер_ракеты)) {
                            параметры.м[j].здоровье -= 10;
                            if (параметры.м[j].здоровье <= 0) {
                                параметры.м[j].жив = false;
                                mechanoid.sendLogMsg("Механоид " + cur + " убил Механоида " + j);
                            }
                            mechanoid.updateStatus("М"+j, параметры.м[j].здоровье, параметры.м[j].пушка.количество_зарядов);
                            // mechanoid.sendLogMsg("Механоид " + cur + " попал в Механоида " + j + " оставшееся здоровье " + м[j].здоровье + " Время: "+scene.t()+" c " + math.sqrt((м[j].д.y1-м[cur].пушка.обойма[i].ракета.y1)^2 + (м[j].д.y3-м[cur].пушка.обойма[i].ракета.y3)^2));
                            параметры.м[cur].пушка.обойма[i].отображать = false;
                            mechanoid.removePoint("Ракета " + cur + " " + i);
                        }
                    }
                }
            }
        }
    }
}

// Ближайший вражеский механоид
void nearest_mechanoid(int i) {
    параметры.м[i].индекс_ближайшего_врага = -1;
    float max_distance = 100000.0;
    for(int j=0; j < параметры.м[i].количество_видимых_элементов; ++j) {
        if (параметры.м[i].видимые_элементы[j].тип_элемента == "Механоид") {
            float distance = math.vec2Len(параметры.м[i].д.y1 - параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y1, параметры.м[i].д.y3 - параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y3);
            if ((параметры.м[i].индекс_ближайшего_врага == -1) || (distance < max_distance)){
                параметры.м[i].индекс_ближайшего_врага = параметры.м[i].видимые_элементы[j].индекс;
                max_distance = distance;
            }
        }
    }
}

// Ближайший флаг
void nearest_flag(int i) {
    параметры.м[i].индекс_ближайшего_флага = -1;
    float max_distance = 100000.0;
    for(int j=0; j < параметры.м[i].количество_видимых_элементов; ++j) {
        if (параметры.м[i].видимые_элементы[j].тип_элемента == "Флаг") {
            float distance = math.vec2Len(параметры.м[i].д.y1 - параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].x, параметры.м[i].д.y3 - параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].z);
            if ((параметры.м[i].индекс_ближайшего_флага == -1) || (distance < max_distance)){
                параметры.м[i].индекс_ближайшего_флага = параметры.м[i].видимые_элементы[j].индекс;
                max_distance = distance;
            }
        }
    }
}

// Работа датчика зрения механоида
void vision(int cur) {
    параметры.м[cur].количество_видимых_элементов = 0;
    
    // Проверяем механоиды
    for(int i=0; i < константы.количество_механоидов; ++i) {
        if (cur != i) {
            if (параметры.м[i].жив) {
                if (math.vec2Len(параметры.м[i].д.y1 - параметры.м[cur].д.y1, параметры.м[i].д.y3 - параметры.м[cur].д.y3) 
                <= параметры.м[cur].радиус_зрения)
                {
                    if ((scene.t() - параметры.м[i].сообщение_врага) > 1.0) {
                        sys.print("Механоид " + cur + " увидел механоида " + i + "  Время: "+scene.t()+" c");
                        // mechanoid.sendLogMsg("Механоид " + cur + " увидел Механоида " + i + "  Время: "+scene.t()+" c");
                        параметры.м[i].сообщение_врага = scene.t();
                    }
                    параметры.м[cur].видимые_элементы[параметры.м[cur].количество_видимых_элементов].индекс = i;
                    параметры.м[cur].видимые_элементы[параметры.м[cur].количество_видимых_элементов].тип_элемента = "Механоид";
                    параметры.м[cur].количество_видимых_элементов++;
                }
            }
        }
    }
    
    // Проверяем флаги
    if (параметры.количество_захваченных_флагов < константы.количество_флагов) {
        for(int i=0; i < константы.количество_флагов; ++i) {
            if (параметры.флаг[i].отображается) {
               if (math.vec2Len(параметры.флаг[i].x - параметры.м[cur].д.y1, параметры.флаг[i].z - параметры.м[cur].д.y3) 
                <= параметры.м[cur].радиус_зрения)
               {
                    параметры.м[cur].видимые_элементы[параметры.м[cur].количество_видимых_элементов].индекс = i;
                    параметры.м[cur].видимые_элементы[параметры.м[cur].количество_видимых_элементов].тип_элемента = "Флаг";
                    параметры.м[cur].количество_видимых_элементов++;
                }
            }
        }
    }
    
    // Проверяем элементы
    
    nearest_mechanoid(cur);
    nearest_flag(cur);
    
}

// Проверка достижения флага
void flag_catch(int i) 
{
    if (параметры.количество_захваченных_флагов < константы.количество_флагов) 
    {
        if (math.vec2Len(параметры.флаг[параметры.количество_захваченных_флагов].x-параметры.м[i].д.y1, параметры.флаг[параметры.количество_захваченных_флагов].z 
        - параметры.м[i].д.y3) <= math.toFloat(константы.размер_механоида + константы.размер_флага))
        {
            sys.print("Механоид " + i + " захватил флаг " + параметры.количество_захваченных_флагов + "! Время: " + scene.t() + " c" );
            mechanoid.sendLogMsg("Механоид " + i + " захватил Флаг " + параметры.количество_захваченных_флагов + "! Время: " + scene.t() + " c");
        
            mechanoid.removePoint("Ф" + параметры.количество_захваченных_флагов);
            параметры.флаг[параметры.количество_захваченных_флагов].отображается = false;
            
            параметры.количество_захваченных_флагов++;
            
            // Установка следующего флага
            if (параметры.количество_захваченных_флагов < константы.количество_флагов) 
            {
                mechanoid.addSettings("Ф" + параметры.количество_захваченных_флагов, mechanoid.Mesh.Triangle, константы.размер_флага, mechanoid.Color.Yellow);
                mechanoid.addPoint("Ф" + параметры.количество_захваченных_флагов,
                    параметры.флаг[параметры.количество_захваченных_флагов].x,
                    параметры.флаг[параметры.количество_захваченных_флагов].z);
                параметры.флаг[параметры.количество_захваченных_флагов].отображается = true;
            }
        }
    }
}

// Движение, когда у механоида нет цели. Движение по квадрату
void default_movement(int i, float длина_стороны, bool reset) {
    if(reset) {
        параметры.м[i].вершина.x = параметры.м[i].д.y1;
        параметры.м[i].вершина.z = параметры.м[i].д.y3;
        параметры.м[i].состояние = 0;
    }

    if(параметры.м[i].состояние == 0) {
        if (((параметры.м[i].вершина.x-параметры.м[i].д.y1)^2 + (параметры.м[i].вершина.z-параметры.м[i].д.y3)^2) >= длина_стороны * длина_стороны) {
            параметры.м[i].состояние = 1;
            параметры.м[i].вершина.x = параметры.м[i].д.y1;
            параметры.м[i].вершина.z = параметры.м[i].д.y3;
        }
        параметры.м[i].д.xc = параметры.м[i].вершина.x + длина_стороны;
        параметры.м[i].д.zc = параметры.м[i].вершина.z;
    }
    if(параметры.м[i].состояние == 1) {
        if (((параметры.м[i].вершина.x-параметры.м[i].д.y1)^2 + (параметры.м[i].вершина.z-параметры.м[i].д.y3)^2) >= длина_стороны * длина_стороны) {
            параметры.м[i].состояние = 2;
            параметры.м[i].вершина.x = параметры.м[i].д.y1;
            параметры.м[i].вершина.z = параметры.м[i].д.y3;
        }
        параметры.м[i].д.xc = параметры.м[i].вершина.x;
        параметры.м[i].д.zc = параметры.м[i].вершина.z - длина_стороны;
    }
       
    if(параметры.м[i].состояние == 2) {
        if (((параметры.м[i].вершина.x-параметры.м[i].д.y1)^2 + (параметры.м[i].вершина.z-параметры.м[i].д.y3)^2) >= длина_стороны * длина_стороны) {
            параметры.м[i].состояние = 3;
            параметры.м[i].вершина.x = параметры.м[i].д.y1;
            параметры.м[i].вершина.z = параметры.м[i].д.y3;
        }
        параметры.м[i].д.xc = параметры.м[i].вершина.x - длина_стороны;
        параметры.м[i].д.zc = параметры.м[i].вершина.z;
    }
    if(параметры.м[i].состояние == 3) {
        if (((параметры.м[i].вершина.x-параметры.м[i].д.y1)^2 + (параметры.м[i].вершина.z-параметры.м[i].д.y3)^2) >= длина_стороны * длина_стороны) {
            параметры.м[i].состояние = 0;
            параметры.м[i].вершина.x = параметры.м[i].д.y1;
            параметры.м[i].вершина.z = параметры.м[i].д.y3;
        }
        параметры.м[i].д.xc = параметры.м[i].вершина.x;
        параметры.м[i].д.zc = параметры.м[i].вершина.z + длина_стороны;
    }
}

// Движение, когда у механоида есть цель
void target_movement(int i,  float x, float z) {
    параметры.м[i].д.xc = x;
    параметры.м[i].д.zc = z;
}

// Управление Механоидом 0
void mechanoid_0_control() {
    int i = 0;
    // rocketHit(i);
    vision(i);
    // flag_catch(i);
    if (параметры.м[i].индекс_ближайшего_врага != -1) {
        if (параметры.м[i].пушка.количество_зарядов != 0) {
                    // м[i].д.V_z = 0.5;
                    if ((scene.t() - параметры.м[i].пушка.скорострельность) > 1.0) {
                        // sys.print("Механоид " + i + " Количество зарядов : " + м[i].пушка.количество_зарядов +  " Время: "+scene.t()+" c" );
                        rocketLaunch(i, параметры.м[параметры.м[i].индекс_ближайшего_врага].д.y1, параметры.м[параметры.м[i].индекс_ближайшего_врага].д.y3);
                        // target_movement(i, м[j].д.y1, м[j].д.y3);
                        параметры.м[i].пушка.скорострельность = scene.t();
                    }
                }
        
    }
    
   if (параметры.м[i].индекс_ближайшего_флага != -1) {
        target_movement(i, параметры.флаг[параметры.м[i].индекс_ближайшего_флага].x, параметры.флаг[параметры.м[i].индекс_ближайшего_флага].z);
                if ((scene.t() - параметры.м[i].сообщение_флага) > 1.0) {
                    sys.print("Механоид " + i + " увидел флаг " + параметры.м[i].индекс_ближайшего_флага + "  Время: " + scene.t() + " c");
                    // mechanoid.sendLogMsg("Механоид " + i + " увидел Флаг " + видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    параметры.м[i].сообщение_флага = scene.t();
                }
    }
    else {
        default_movement(i, 50.0, false);   
    }
}

// Управление Механоидом 1
void mechanoid_1_control() {
    int i = 1;
    // rocketHit(i);
    vision(i);
    // flag_catch(i);
    if (параметры.м[i].количество_видимых_элементов != 0) {
        for(int j=0; j < параметры.м[i].количество_видимых_элементов; ++j) {
            if (параметры.м[i].видимые_элементы[j].тип_элемента == "Механоид") {
                if (параметры.м[i].пушка.количество_зарядов != 0) {
                    // м[i].д.V_z = 0.5;
                    if ((scene.t() - параметры.м[i].пушка.скорострельность) > 1.0) {
                        // sys.print("Механоид " + i + " Количество зарядов : " + м[i].пушка.количество_зарядов +  " Время: "+scene.t()+" c" );
                        rocketLaunch(i, параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y1, параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y3);
                        // target_movement(i, м[j].д.y1, м[j].д.y3);
                        параметры.м[i].пушка.скорострельность = scene.t();
                    }
                }
            }
                
            if (параметры.м[i].видимые_элементы[j].тип_элемента == "Флаг") {
                target_movement(i, параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].x, параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].z);
                if ((scene.t() - параметры.м[i].сообщение_флага) > 1.0) {
                    sys.print("Механоид " + i + " увидел флаг " + параметры.м[i].видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    // mechanoid.sendLogMsg("Механоид " + i + " увидел Флаг " + видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    параметры.м[i].сообщение_флага = scene.t();
                }
                flag_catch(i);
            }
        }
    }
    else {
        default_movement(i, 40.0, false);   
    }
}

// Управление Механоидом 2
void mechanoid_2_control() {
    int i = 2;
    // rocketHit(i);
    vision(i);
    // flag_catch(i);
    if (параметры.м[i].количество_видимых_элементов != 0) {
        for(int j=0; j < параметры.м[i].количество_видимых_элементов; ++j) {
            if (параметры.м[i].видимые_элементы[j].тип_элемента == "Механоид") {
                if (параметры.м[i].пушка.количество_зарядов != 0) {
                    // м[i].д.V_z = 0.5;
                    if ((scene.t() - параметры.м[i].пушка.скорострельность) > 1.0) {
                        // sys.print("Механоид " + i + " Количество зарядов : " + м[i].пушка.количество_зарядов +  " Время: "+scene.t()+" c" );
                        rocketLaunch(i, параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y1, параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y3);
                        // target_movement(i, м[j].д.y1, м[j].д.y3);
                        параметры.м[i].пушка.скорострельность = scene.t();
                    }
                }
            }
                
            if (параметры.м[i].видимые_элементы[j].тип_элемента == "Флаг") {
                target_movement(i, параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].x, параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].z);
                if ((scene.t() - параметры.м[i].сообщение_флага) > 1.0) {
                    sys.print("Механоид " + i + " увидел флаг " + параметры.м[i].видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    // mechanoid.sendLogMsg("Механоид " + i + " увидел Флаг " + видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    параметры.м[i].сообщение_флага = scene.t();
                }
                flag_catch(i);
            }
        }
    }
    else {
        default_movement(i, 30.0, false);   
    }
}

// Управление Механоидом 3
void mechanoid_3_control() {
    int i = 3;
    // rocketHit(i);
    vision(i);
    // flag_catch(i);
    if (параметры.м[i].количество_видимых_элементов != 0) {
        for(int j=0; j < параметры.м[i].количество_видимых_элементов; ++j) {
            if (параметры.м[i].видимые_элементы[j].тип_элемента == "Механоид") {
                if (параметры.м[i].пушка.количество_зарядов != 0) {
                    // м[i].д.V_z = 0.5;
                    if ((scene.t() - параметры.м[i].пушка.скорострельность) > 1.0) {
                        // sys.print("Механоид " + i + " Количество зарядов : " + м[i].пушка.количество_зарядов +  " Время: "+scene.t()+" c" );
                        rocketLaunch(i, параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y1, параметры.м[параметры.м[i].видимые_элементы[j].индекс].д.y3);
                        // target_movement(i, м[j].д.y1, м[j].д.y3);
                        параметры.м[i].пушка.скорострельность = scene.t();
                    }
                }
            }
                
            if (параметры.м[i].видимые_элементы[j].тип_элемента == "Флаг") {
                target_movement(i, параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].x, параметры.флаг[параметры.м[i].видимые_элементы[j].индекс].z);
                if ((scene.t() - параметры.м[i].сообщение_флага) > 1.0) {
                    sys.print("Механоид " + i + " увидел флаг " + параметры.м[i].видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    // mechanoid.sendLogMsg("Механоид " + i + " увидел Флаг " + видимые_элементы[j].индекс + "  Время: " + scene.t() + " c");
                    параметры.м[i].сообщение_флага = scene.t();
                }
                flag_catch(i);
            }
        }
    }
    else {
        target_movement(i, параметры.м[1].д.y1, параметры.м[1].д.y3);   
    }
}

void onIteration() {
    if (параметры.м[0].жив) {
        mechanoid_0_control();
    }
    if (параметры.м[1].жив) {
        mechanoid_1_control();
    }
    if (параметры.м[2].жив) {
        mechanoid_2_control();
    }
    if (параметры.м[3].жив) {
        mechanoid_3_control();
    }
    
    for(int i=0; i < константы.количество_механоидов; ++i) {
        flag_catch(i);
    }
      /*
       Враги в;  
       for(int j=0; j < количество_механоидов; ++j) {
            if (j != i) {
                if (math.sqrt((м[j].д.y1-м[i].д.y1)^2 + (м[j].д.y3-м[i].д.y3)^2)
                    < м[i].радиус_зрения) {
                    в.поз[j].задана = true;
                    в.поз[j].x = м[j].д.y1;
                    в.поз[j].y = м[j].д.y2;
                    в.поз[j].z = м[j].д.y3;
                     
                         М0 = Sphere
                         М1 = Cylinder
                         М2 = Cube
                         М3 = Minimal (Тетраэдр) 
                         
                    // м[i].д.V_z = 0;
                    sys.print("Механоид " + i + " увидел врага! " + j + "  Время: "+scene.t()+" c" );
                    
                    if (м[i].пушка.количество_зарядов != 0)
                    {
                        if ((scene.t() - м[i].пушка.flag) > 1.0) {
                        rocketLaunch(i, м[i].д.y1, м[i].д.y2, м[i].д.y3, м[j].д.y1, м[j].д.y3);
                        м[i].пушка.flag = scene.t();
                        }
                    }
                }
        
        м[i].control(в); */
        
}

// Определение функции обратного вызова (callback) для отображения результатов моделирования
void onShow() {
//    chart.addPoint( "0", scene.t(), 0.0);
//    graph3d.addPint oint("М"+1, м[1].д.y1, м[1].д.y2, м[1].д.y3);
    for(int i=0; i < константы.количество_механоидов; ++i) {
//        chart.addPoint( "nxt"+i, scene.t(), м[i].д.nxt);
        chart.addPoint( "P"+i, scene.t(), параметры.м[i].д.P);
//        chart.addPoint( "Vg"+i, scene.t(), м[i].д.Vg);
//        chart.addPoint( "y5"+i, scene.t(), м[i].д.y5);
//        chart.addPoint( "y2"+i, scene.t(), м[i].д.y2);
        chart.addPoint( "X"+i, scene.t(), параметры.м[i].д.X);
//        chart.addPoint( "R"+i, scene.t(),
//                       math.sqrt((образец.параметры.флаг.x-м[i].д.y1)^2 
//                        + (образец.параметры.флаг.z-м[i].д.y3)^2));
        if (параметры.м[i].жив) {
            mechanoid.addPoint("М"+i, параметры.м[i].д.y1, параметры.м[i].д.y3);
        }
        
        if (параметры.м[i].пушка.количество_зарядов != параметры.м[i].пушка.макс_колво_зарядов) {
            for(int j = параметры.м[i].пушка.макс_колво_зарядов - 1; j >= параметры.м[i].пушка.количество_зарядов; --j) {
                if (параметры.м[i].пушка.обойма[j].отображать == true) {
                    mechanoid.addPoint("Ракета " + i + " " + j, параметры.м[i].пушка.обойма[j].ракета.y1, параметры.м[i].пушка.обойма[j].ракета.y3);
                    rocketOnScene(i, j);
                    rocketHit(i);
                }
            }
        }
    }
}

// Инициализация сцены
scene.setIterationCallback(onShow, 10);
scene.setEachIterationCallback(onIteration);
scene.setRealtimeModeEnabled(true); 
scene.setT(0.0);
scene.setDt(0.01);
scene.setTk(3000.0);
// Добавление объектов на сцену
for(int i=0; i < константы.количество_механоидов; ++i) {    
    scene.add(параметры.м[i].д);
    // scene.add(rockets[i].ракета);
}
// Запуск моделирования
scene.start();

